General:
	Optimize project format
		DONE: make it a multi-file module
		DONE: register project on pypi
		DONE: pip based installation works on Mac

Preparation:
	DONE: Tokenization: There are two tokenizers:
		One based on whitespace, punctuation not treated as separate tokens
		Another based on whitespace or punctuation, punctuation is treated as separate tokens (default)
	Note: Tokenization is done again in the SuffixArray module! TODO FIX THIS!
	Normalization: None

Alignment:
	Build global string array: DONE
	Build suffix array: DONE
	Build LCP array: DONE
	Find LCP intervals: DONE
	Find non overlapping repeating blocks: DONE
	Build block witnesses: DONE
	TODO: combine dekker_suffix_alignment + edit graph aligner
	
	
	Find match phrases: DONE
	Find transpositions: DONE
	Merge vertices into graph: DONE
	Handle 3, 4, N witnesses: DONE
	Deal with alignment choices using decision tree: DONE (implemented in EditGraphAligner)
	a* search algorithm as optimization: NOT YET NEEDED
	Merge transpositions into graph: TODO

	
Presentation:
	Join variant graph (parallel segments): DONE
	Rank the graph: DONE
	Build alignment table: DONE
	HTML output: DONE
	SVG output: DONE
	JSON output: DONE
	XML output: TODO
	TEI output: TODO
		
Special cases:
	TODO: failing use case in test_collatex_block_witnesses.py
		name: test_blocks_failing_transposition_use_case_old_algorithm
				